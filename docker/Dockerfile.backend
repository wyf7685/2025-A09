FROM ghcr.io/astral-sh/uv:python3.13-bookworm-slim AS venv

WORKDIR /app

RUN --mount=type=bind,source=docker/debian.sources,target=/etc/apt/sources.list.d/debian.sources \
    apt-get update && \
    apt-get install -y --no-install-recommends ca-certificates

RUN uv venv /opt/venv
ENV UV_LINK_MODE=copy
ENV VIRTUAL_ENV=/opt/venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --locked --active --no-dev

FROM python:3.13-slim-bookworm AS app

WORKDIR /app

ENV TZ=Asia/Shanghai \
    LANG=zh_CN.UTF-8 \
    LANGUAGE=zh_CN.UTF-8 \
    LC_ALL=zh_CN.UTF-8 \
    PYTHONPATH=/app \
    PATH="/opt/venv/bin:$PATH"

RUN --mount=type=bind,source=docker/debian.sources,target=/etc/apt/sources.list.d/debian.sources \
    --mount=type=bind,source=docker/setup-docker-apt.sh,target=/setup-docker-apt.sh \
    apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates curl fonts-wqy-microhei fonts-wqy-zenhei fonts-arphic-ukai fonts-arphic-uming fontconfig && \
    bash /setup-docker-apt.sh && \
    apt-get update && apt-get install -y --no-install-recommends docker-ce-cli && \
    rm -rf /var/lib/apt/lists/* && \
    fc-cache -f -v

COPY --from=venv /opt/venv /opt/venv
COPY app/ /app/app

CMD ["python", "-m", "app"]
