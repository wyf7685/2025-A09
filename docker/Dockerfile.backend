FROM python:3.13-slim-bookworm AS builder
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates

RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    --mount=type=bind,source=mcp_servers/uv.lock,target=mcp_servers/uv.lock \
    --mount=type=bind,source=mcp_servers/pyproject.toml,target=mcp_servers/pyproject.toml \
    uv venv /opt/venv && \
    . /opt/venv/bin/activate && \
    uv sync --locked --active --no-dev --link-mode copy

FROM python:3.13-slim-bookworm AS compiler

WORKDIR /
RUN --mount=type=bind,source=docker/compile_pyc.py,target=/compile_pyc.py \
    --mount=type=bind,source=app,target=/app \
    python /compile_pyc.py /app /out

FROM python:3.13-slim-bookworm AS app

WORKDIR /app

ENV TZ=Asia/Shanghai \
    LANG=zh_CN.UTF-8 \
    LANGUAGE=zh_CN.UTF-8 \
    LC_ALL=zh_CN.UTF-8 \
    PYTHONPATH=/app \
    PATH="/opt/venv/bin:$PATH"

RUN --mount=type=bind,source=docker/setup-docker-apt.sh,target=/setup-docker-apt.sh \
    apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates curl fonts-wqy-microhei fonts-wqy-zenhei fonts-arphic-ukai fonts-arphic-uming fontconfig && \
    bash /setup-docker-apt.sh && \
    apt-get update && apt-get install -y --no-install-recommends docker-ce-cli && \
    rm -rf /var/lib/apt/lists/* && \
    fc-cache -f -v

COPY docker/gunicorn_conf.py /gunicorn_conf.py
COPY --from=builder /opt/venv /opt/venv
COPY --from=compiler /out /app/app

CMD ["gunicorn", "-k", "uvicorn.workers.UvicornWorker", "-c", "/gunicorn_conf.py", "app.__main__:app"]
