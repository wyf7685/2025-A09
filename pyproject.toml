[project]
name = "analysis-agent"
version = "0.1.0"
description = "AI-powered data analysis platform with intelligent agents"
readme = "README.md"
requires-python = ">=3.13"
license = { text = "Apache-2.0" }
authors = [
  { name = "wyf7685", email = "wyf7685@163.com" },
  { name = "Cccccwd", email = "1838935684@qq.com" },
  { name = "klli", email = "1613679054@qq.com" },
]
dependencies = [
  "aiocache[redis]>=0.12.3",
  "anyio>=4.9.0",
  "docker>=7.1.0",
  "fastapi[standard]>=0.115.14",
  "gunicorn>=23.0.0",
  "joblib>=1.5.1",
  "langchain>=0.3.26",
  "langchain-community>=0.3.26",
  "langchain-deepseek>=0.1.4",
  "langchain-google-genai>=2.1.5",
  "langchain-mcp-adapters>=0.1.7",
  "langchain-ollama>=0.3.3",
  "langchain-openai>=0.3.27",
  "langgraph>=0.5.1",
  "loguru>=0.7.3",
  "matplotlib>=3.10.3",
  "numpy>=2.3.1",
  "pandas[excel]>=2.2.0",
  "pyarrow>=19.0.1",
  "pydremio>=0.4.0",
  "requests>=2.32.0",
  "scikit-learn>=1.7.0",
  "scipy>=1.16.0",
  "statsmodels>=0.14.4",
  "xgboost>=3.0.2",
  "yarl>=1.20.1",
]

[dependency-groups]
dev = ["pyarrow-stubs>=19.4", "tensorflow>=2.20.0"]

[tool.uv.workspace]
members = ["mcp_servers"]

[tool.pyright]
pythonVersion = "3.13"
pythonPlatform = "All"
typeCheckingMode = "standard"
ignore = [".venv", "data", "**/build"]
disableBytesTypePromotions = true

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = [
  "F",     # Pyflakes
  "W",     # pycodestyle warnings
  "E",     # pycodestyle errors
  "UP",    # pyupgrade
  "RUF",   # Ruff-specific rules
  "ERA",   # eradicate
  "FLY",   # flynt
  "FURB",  # refurb
  "I",     # isort
  "N",     # PEP8-naming
  "PD",    # pandas-vet
  "PERF",  # Perflint
  "PGH",   # pygrep-hooks
  "TRY",   # tryceratops
  "ASYNC", # flake8-async
  "ANN",   # flake8-annotations
  "S",     # flake8-bandit
  "FBT",   # flake8-boolean-trap
  "A",     # flake8-builtins
  "B",     # flake8-bugbear
  "COM",   # flake8-commas
  "C4",    # flake8-comprehensions
  "DTZ",   # flake8-datetimez
  "T10",   # flake8-debugger
  "EM",    # flake8-errmsg
  "FA",    # flake8-future-annotations
  "ISC",   # flake8-implicit-str-concat
  "ICN",   # flake8-import-conventions
  "PIE",   # flake8-pie
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "RSE",   # flake8-raise
  "RET",   # flake8-return
  "SLF",   # flake8-self
  "SIM",   # flake8-simplify
  "SLOT",  # flake8-slots
  "TID",   # flake8-tidy-imports
  "ARG",   # flake8-unused-arguments
  "PTH",   # flake8-use-pathlib
  "TCH",   # flake8-type-checking
  "YTT",   # flake8-2020
]
ignore = [
  "E402",   # module-import-not-at-top-of-file
  "RUF001", # ambiguous-unicode-character-string
  "RUF002", # ambiguous-unicode-character-docstring
  "RUF003", # ambiguous-unicode-character-comment
  "ANN401", # any-type
  "TRY003", # raise-vanilla-args
  "TRY301", # raise-within-try
  "EM102",  # f-string-in-exception
  "COM812", # missing-trailing-comma
  "ERA001", # commented-out-code
  "EM101",  # raw-string-in-exception
  "TID252", # relative-imports
  "ISC001", # single-line-implicit-string-concatenation
  "DTZ005", # call-datetime-now-without-tzinfo
  "S311",   # suspicious-non-cryptographic-random-usage
  "PGH003", # blanket-type-ignore
  "N818",   # error-suffix-on-exception-name  # stupid
  "PYI041", # redundant-numeric-union  # int | float
  "S101",   # assert
  "B911",   # batched-without-explicit-strict
  "PGH004", # blanket-noqa
  "PLC",    # stupid
  "PD901",  # pandas-df-variable-name
  "N807",   # dunder-function-name
  "N806",   # non-lowercase-variable-in-function
  "N803",   # invalid-argument-name
  "FBT001", # boolean-type-hint-positional-argument
  "FBT002", # boolean-default-value-positional-argument
  "FBT003", # boolean-positional-value-in-call
  "TRY300", # try-consider-else
  "DTZ006", # call-datetime-fromtimestamp
]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id", "dir", "input", "format"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["app", "tests/*"]
extra-standard-library = ["typing_extensions"]
known-third-party = ["dremio"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
  "fastapi.Depends",
  "fastapi.Query",
  "fastapi.Body",
  "fastapi.Header",
  "fastapi.File",
]
